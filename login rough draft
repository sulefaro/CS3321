#include <iostream>
#include <fstream>
#include <string>
#include <queue>

using namespace std;

int main()
{

	//log in system
	char tab = '	';
	string tempString;
	string loginFileCurrentLine;
	string usernameEntered;
	string passwordEntered;
	char username[16];
	char password[24];
	char ID[100];
	char usernameEnteredInChar[16];
	char passwordEnteredInChar[24];
	bool usernameMatch = false;
	bool passwordMatch = false;
	bool userVerified = false;


	//user enters username for login
	cout << "Enter your username: " << endl;
	cin >> usernameEntered;

	cout << "Enter your password: " << endl;
	cin >> passwordEntered;

	//transform username string to char
	for (int x = 0; x < usernameEntered.size(); x++)
	{
		usernameEnteredInChar[x] = usernameEntered[x];
	}

	//transform password string to char
	for (int x = 0; x < passwordEntered.size(); x++)
	{
		passwordEnteredInChar[x] = passwordEntered[x];
	}

	ifstream loginFile;
	loginFile.open("login.txt");

	//search for username to match and confirms password correct, then returns ID number to search in data entry for rest info of user
	while (getline(loginFile, loginFileCurrentLine) && usernameMatch == false)
	{
		//tab positions to find password and ID
		int firstTab;
		int secondTab;

		//get only username by stopping at first tab
		for (int x = 0; loginFileCurrentLine[x] == tab; x++)
		{
			username[x] = loginFileCurrentLine[x];

			if (loginFileCurrentLine[x + 1] == tab)
			{
				firstTab = x + 1;
			}
		}
		
		//verify username
		if (usernameEnteredInChar == username)
		{
			usernameMatch = true;
		}

		if (usernameMatch == true)
		{
			//for password iteration since x no longer starts at 0
			int i = 0;
			//copy password starting from first tab
			for (int x = firstTab; loginFileCurrentLine[x] == tab; x++)
			{
				password[i] = loginFileCurrentLine[x];
				//take pos of second tab
				if (loginFileCurrentLine[x + 1] == tab)
				{
					secondTab = x + 1;
				}
			}
			//verify password
			if (passwordEnteredInChar == password)
			{
				passwordMatch = true;
			}
		}
		//get ID if password matches, does not bother to get ID if doesn't match
		if (passwordMatch == true)
		{
			//for ID iteration since x no longer starts at 0
			int j = 0;
			//copy id starting starting from second tab
			for (int x = secondTab; loginFileCurrentLine[x] == tab; x++)
			{
				ID[j] = loginFileCurrentLine[x];
			}
		}

		if (usernameMatch == true && passwordMatch == true)
		{
			userVerified = true;
		}

		if (userVerified == true)
		{
			return ID;
		}



	}

}
